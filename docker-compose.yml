version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zookeeper:2888:3888
    networks:
      - kafka_network

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"  # Exposed port for OUTSIDE listener
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE  # Set to the internal listener name
    depends_on:
      - zookeeper
    networks:
      - kafka_network

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongo_data:/data/db
    networks:
      - kafka_network

  user-service:
    build:
      context: .
    command: npm run start:user
    depends_on:
      - kafka
      - mongodb
    ports:
      - "3001:3001"
    networks:
      - kafka_network

  book-service:
    build:
      context: .
    command: npm run start:book
    depends_on:
      - kafka
      - mongodb
    ports:
      - "3002:3002"
    networks:
      - kafka_network

  bookshelf-service:
    build:
      context: .
    command: npm run start:bookshelf
    depends_on:
      - kafka
      - mongodb
    ports:
      - "3003:3003"
    networks:
      - kafka_network

  rating-service:
    build:
      context: .
    command: npm run start:rating
    depends_on:
      - kafka
      - mongodb
    ports:
      - "3004:3004"
    networks:
      - kafka_network

  auth-service:
    build:
      context: .
    command: npm run start:auth
    depends_on:
      - kafka
      - mongodb
    ports:
      - "3005:3005"
    networks:
      - kafka_network

volumes:
  mongo_data:

networks:
  kafka_network:
    driver: bridge
